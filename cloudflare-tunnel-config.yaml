# ============================================
# Cloudflare Tunnel Configuration
# Pydio Cells外部公開用
# ============================================

# このファイルはCloudflare Tunnelを使用してPydio Cellsを
# インターネットに公開する際の設定例です

# 前提条件:
# 1. Cloudflareアカウントとドメイン
# 2. cloudflaredのインストール
# 3. Cloudflare Tunnel作成済み

---
apiVersion: v1
kind: Secret
metadata:
  name: cloudflared-token
  namespace: cells
type: Opaque
stringData:
  token: "eyJhIjoiODQ2ZWFmZDUzNDI1M2Q1M2Q2ZTZiNzRhOWU3MTdiN2EiLCJ0IjoiMGE3N2EwZmYtNDcyMC00ZDhlLWI1MTgtMmU4NTdmOGQzOTM4IiwicyI6Ik5EUTBNV1V3TURVdE56YzVZaTAwTXpjMkxUaGxOV0V0WW1NMlltTmxNakJtTW1ZMiJ9"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
  namespace: cells
  labels:
    app: cloudflared
spec:
  replicas: 2  # 冗長性のため2つ
  selector:
    matchLabels:
      app: cloudflared
  template:
    metadata:
      labels:
        app: cloudflared
    spec:
      # ホストのネットワークスタックを使用（IPv6対応）
      hostNetwork: true
      # ホストのDNSを使用
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: cloudflared
        image: cloudflare/cloudflared:latest
        args:
        - tunnel
        - --no-autoupdate
        - --edge-ip-version
        - "6"  # IPv6のみ使用
        - --protocol
        - quic  # QUICプロトコルでIPv6を最大限活用
        - run
        - --token
        - $(TUNNEL_TOKEN)
        env:
        - name: TUNNEL_TOKEN
          valueFrom:
            secretKeyRef:
              name: cloudflared-token
              key: token
        - name: TUNNEL_TRANSPORT_PROTOCOL
          value: "quic"
        - name: TUNNEL_EDGE_IP_VERSION
          value: "auto"
        resources:
          requests:
            memory: 128Mi
            cpu: 100m
          limits:
            memory: 256Mi
            cpu: 200m

---
# ============================================
# セットアップ手順
# ============================================

# 【IPv6優先通信の設定】
# このconfigではCloudflareとの通信をIPv6優先にしています。
# IPoE (IPv6)接続の高速性を活用できます。
#
# --edge-ip-version オプション:
#   - auto: IPv6優先、フォールバックでIPv4（推奨）
#   - 6: IPv6のみ（IPv6接続が確実な場合）
#   - 4: IPv4のみ
#   - auto-no-ipv4: IPv6のみ、IPv4フォールバックなし
#
# --protocol オプション:
#   - quic: 最新のQUICプロトコル（UDP based, IPv6で最適）
#   - http2: 従来のHTTP/2
#   - h2mux: レガシープロトコル
#
# 環境に応じた調整:
# 1. 完全IPv6環境: --edge-ip-version を "6" に変更
# 2. IPv4も必要: "auto" のまま（デフォルト）
# 3. 接続が不安定: --protocol を "http2" に変更

# 1. Cloudflare Tunnelの作成
#    cloudflared tunnel create pydio-cells
#
# 2. Tunnel IDとCredentialsの取得
#    cat ~/.cloudflared/<tunnel-id>.json
#
# 3. このファイルの編集
#    - credentials.jsonの内容を実際の値に置き換え
#    - config.yamlのtunnel IDを実際の値に置き換え
#    - hostnameを実際のドメインに置き換え
#
# 4. Cloudflare DNSレコードの設定
#    cells.yourdomain.com -> CNAME -> <tunnel-id>.cfargotunnel.com
#    minio.yourdomain.com -> CNAME -> <tunnel-id>.cfargotunnel.com
#    s3.yourdomain.com -> CNAME -> <tunnel-id>.cfargotunnel.com
#
# 5. デプロイ
#    kubectl apply -f cloudflare-tunnel-config.yaml
#
# 6. Pydio Cellsの設定更新
#    cells-complete.yamlの以下を変更:
#    CELLS_EXTERNAL: "https://cells.yourdomain.com"
#
# 7. 再デプロイ
#    kubectl apply -f cells-complete.yaml
#    kubectl rollout restart deployment/pydio-cells -n cells
#
# 8. IPv6接続の確認
#    kubectl logs -n cells deployment/cloudflared
#    # ログに "Connection ... registered with protocol: quic" と表示されることを確認
#    # IPv6アドレスが使用されていることを確認

---
# ============================================
# セキュリティ強化（本番環境推奨）
# ============================================

# 1. 全てのパスワード・シークレットを変更
#    - minio-credentials
#    - mysql-credentials
#    - cloudflared-credentials
#
# 2. Cloudflare Access（Zero Trust）の有効化
#    https://developers.cloudflare.com/cloudflare-one/
#
# 3. WAF（Web Application Firewall）ルールの設定
#
# 4. Rate Limitingの設定
#
# 5. SSL/TLS設定の最適化
#    - Full (strict) SSLモード
#    - Minimum TLS Version: 1.2+
#    - HSTS有効化
