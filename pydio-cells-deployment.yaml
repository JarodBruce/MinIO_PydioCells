apiVersion: v1
kind: Namespace
metadata:
  name: pydio-system
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data
  namespace: pydio-system
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pydio-data
  namespace: pydio-system
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: pydio-system
type: Opaque
data:
  root-password: cm9vdF9wYXNzd29yZA==  # root_password
  user-password: cHlkaW9fcGFzc3dvcmQ=  # pydio_password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: pydio-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: root-password
        - name: MYSQL_DATABASE
          value: "cells"
        - name: MYSQL_USER
          value: "pydio"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: user-password
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-data
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: pydio-system
spec:
  selector:
    app: mysql
  ports:
  - port: 3306
    targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pydio-cells
  namespace: pydio-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pydio-cells
  template:
    metadata:
      labels:
        app: pydio-cells
    spec:
      initContainers:
      - name: wait-for-mysql
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z mysql 3306; do echo waiting for mysql; sleep 2; done;']
      containers:
      - name: pydio-cells
        image: pydio/cells:latest
        env:
        - name: CELLS_BIND
          value: "0.0.0.0:8080"
        - name: CELLS_EXTERNAL
          value: "http://pydio.local:8080"
        - name: CELLS_NO_TLS
          value: "1"
        - name: CELLS_WORKING_DIR
          value: "/var/cells"
        - name: CELLS_LOG_LEVEL
          value: "info"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: pydio-data
          mountPath: /var/cells
      volumes:
      - name: pydio-data
        persistentVolumeClaim:
          claimName: pydio-data
---
apiVersion: v1
kind: Service
metadata:
  name: pydio-cells
  namespace: pydio-system
spec:
  selector:
    app: pydio-cells
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pydio-ingress
  namespace: pydio-system
  annotations:
    kubernetes.io/ingress.class: "traefik"
spec:
  rules:
  - host: pydio.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pydio-cells
            port:
              number: 8080
